{"version":3,"sources":["scripts/main.js"],"names":["tableData","createDataArr","table","createTable","i","length","isTh","insertNewCol","findRow","tagName","index","filter","col","contains","getRowTexts","row","map","innerText","newCol","document","createElement","lastCol","splice","insertAdjacentElement","querySelectorAll","newTable","push","arr"],"mappings":";AAAA,aAsDC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAjDD,IAHA,IAAMA,EAAYC,EAAc,MAC1BC,EAAQC,IAELC,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,IAC5BE,EAAKF,EAAGF,GACVK,EAAa,KAAMH,GAEnBG,EAAa,KAAMH,GAIvB,SAASI,EAAQC,EAASC,GACjBT,OAAAA,EAAcQ,GAASE,OAC5B,SAAAC,GAAOZ,OAAAA,EAAUU,GAAOG,SAASD,KAIrC,SAASE,EAAYL,EAASC,GAGrBK,OAFKP,EAAQC,EAASC,GAElBM,IAAI,SAAAJ,GAAOA,OAAAA,EAAIK,YAG5B,SAASV,EAAaE,EAASC,GACvBQ,IAAAA,EAASC,SAASC,cAAcX,GAChCY,EAAUb,EAAQC,EAASC,GAAOY,QAAQ,EAAG,GAAG,GAEtDJ,EAAOD,UAAYf,EAAMQ,GAAO,GAEhCW,EAAQE,sBAAsB,cAAeL,GAG/C,SAASjB,EAAcQ,GACVU,OAAAA,EAAAA,SAASK,iBAAiBf,IAGvC,SAASN,IAGF,IAFCsB,IAAAA,EAAW,GAERrB,EAAI,EAAGA,EAAIJ,EAAUK,OAAQD,IAChCE,EAAKF,EAAGJ,GACVyB,EAASC,KAAKZ,EAAY,KAAMV,IAEhCqB,EAASC,KAAKZ,EAAY,KAAMV,IAI7BqB,OAAAA,EAGT,SAASnB,EAAKI,EAAOiB,GACZjB,OAAU,IAAVA,GAAeA,IAAUiB,EAAItB,OAAS","file":"main.f2c69eee.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst tableData = createDataArr('tr');\nconst table = createTable();\n\nfor (let i = 0; i < table.length; i++) {\n  if (isTh(i, table)) {\n    insertNewCol('th', i);\n  } else {\n    insertNewCol('td', i);\n  }\n}\n\nfunction findRow(tagName, index) {\n  return createDataArr(tagName).filter(\n    col => tableData[index].contains(col)\n  );\n}\n\nfunction getRowTexts(tagName, index) {\n  const row = findRow(tagName, index);\n\n  return row.map(col => col.innerText);\n}\n\nfunction insertNewCol(tagName, index) {\n  const newCol = document.createElement(tagName);\n  const lastCol = findRow(tagName, index).splice(-1, 1)[0];\n\n  newCol.innerText = table[index][1];\n\n  lastCol.insertAdjacentElement('beforebegin', newCol);\n}\n\nfunction createDataArr(tagName) {\n  return [...document.querySelectorAll(tagName)];\n}\n\nfunction createTable() {\n  const newTable = [];\n\n  for (let i = 0; i < tableData.length; i++) {\n    if (isTh(i, tableData)) {\n      newTable.push(getRowTexts('th', i));\n    } else {\n      newTable.push(getRowTexts('td', i));\n    }\n  }\n\n  return newTable;\n}\n\nfunction isTh(index, arr) {\n  return index === 0 || index === arr.length - 1;\n}\n"]}